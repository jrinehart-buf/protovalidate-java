// Copyright 2023-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package validationtest;

import "buf/validate/validate.proto";

// ExampleCelExpressionRepeatedUniqueStrings is used to test a CEL expression
// operating against a simple string.
message ExampleCelExpressionRepeatedUniqueStrings {
  repeated string should_be_unique = 1 [
    (buf.validate.field).cel = {
      id: "unique.strings",
      message: "all string values should be unique",
      expression: "this.unique()"
    }
  ];
}

// ExampleCelExpressionRepeatedNestedMessage is used to test a CEL expression
// operating against a nested message wrapping a string.
message ExampleCelExpressionRepeatedNestedMessage {
  repeated ExampleNestedStringMessage should_be_unique = 1 [
    (buf.validate.field).cel = {
      id: "unique.message.string_values",
      message: "all nested message string_value values should be unique",
      expression: "this.map( it, it.string_value ).unique()"
    }
  ];
}

// ExampleNestedStringMessage is a simple wrapper around a string.
message ExampleNestedStringMessage {
  optional string string_value = 1;
}
